<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Apps on Space of Sheva </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://ShevaXu.github.io/categories/apps/index.xml/</link>
    <language>en-us</language>
    <author>Sheva Xu</author>
    
    <updated>Sat, 17 Jan 2015 16:28:36 CST</updated>
    
    <item>
      <title>Fun with maps, part I</title>
      <link>http://shevaxu.github.io/post/funmaps/</link>
      <pubDate>Sat, 17 Jan 2015 16:28:36 CST</pubDate>
      <author>Sheva Xu</author>
      <guid>http://shevaxu.github.io/post/funmaps/</guid>
      <description>

&lt;p&gt;I like travel.&lt;/p&gt;

&lt;p&gt;I always wanted an app to help me memorize all the extradinary experiences in every journey. There are plenty of travalling apps on the web but none of them match my imagination so far (yeah, I&amp;rsquo;m that picky). So why not develop one myself?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is good to have an end to journey toward; but it is the journey that matters, in the end.&lt;/p&gt;

&lt;p&gt;&amp;ndash; Ernest Hemingway&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;D3.js &amp;amp; My Footprint Map&lt;/h2&gt;

&lt;p&gt;The first thing I tried was &lt;a href=&#34;http://d3js.org/&#34;&gt;&lt;em&gt;D3.js&lt;/em&gt;&lt;/a&gt;, which is for &lt;em&gt;Data-driven documents&lt;/em&gt;. Its capability is far beyond making a map, and I have just explored the very little part of it. Mastering such a comprehensive tool would require so much effort, and I&amp;rsquo;m glad that I began learning it with a certain project idea in mind that offered extra motivation. The map I was going to make is my footprint of provinces in China.&lt;/p&gt;

&lt;p&gt;The idea came from an image I saw on &lt;a href=&#34;http://couchsurfing.org/&#34;&gt;&lt;em&gt;Couchsurfing&lt;/em&gt;&lt;/a&gt; for someone&amp;rsquo;s visited countires (like &lt;a href=&#34;http://traveltip.org/countries_visited.php&#34;&gt;this&lt;/a&gt;). I have not explored many countries yet so I wanted to make one for visited provinces in China. I found &lt;a href=&#34;http://blog.econst.org/2014/06/02/china-map-with-d3-js-and-geojson/&#34;&gt;one with similar idea&lt;/a&gt; but it possesses no interaction I desire (but it gave me inspiration and data).&lt;/p&gt;

&lt;p&gt;My final map/app came out like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../playground/footprint-map.html&#34; target=&#34;_blank&#34;&gt;
&lt;img src=&#34;../../img/posts/my-footprint.png&#34; width=100%&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It visualizes both the provinces and cities borders;&lt;/li&gt;
&lt;li&gt;you can pick your marking color for each provinces independently (according to your own logic);&lt;/li&gt;
&lt;li&gt;you can save it to .png image.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can try making your own footprint map (by clicking the image or go to the &lt;em&gt;Playgournd&lt;/em&gt;) and share it. Below are the key steps/obstacles during my development that would help in case you want to customize your own map for another country or the world.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;The magic of D3.js&lt;/h3&gt;

&lt;p&gt;The data model confused me until I found the story of &lt;a href=&#34;http://bost.ocks.org/mike/circles/&#34;&gt;&lt;em&gt;Three Little Circle&lt;/em&gt;&lt;/a&gt; by Mike Bostock, one of the author of D3.js. He also wrote a detail post about &lt;a href=&#34;http://bost.ocks.org/mike/selection/&#34;&gt;&lt;em&gt;How Selections Work&lt;/em&gt;&lt;/a&gt; that I plan to take time reading/understanding in the future.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Data &amp;amp; TopoJSON&lt;/h3&gt;

&lt;p&gt;The provinces/cities data I got was originally in &lt;a href=&#34;http://geojson.org/&#34;&gt;&lt;em&gt;GeoJSON&lt;/em&gt;&lt;/a&gt; format, a subset of &lt;a href=&#34;http://www.json.org/&#34;&gt;&lt;em&gt;JavaScript Object Notation&lt;/em&gt;&lt;/a&gt; for geographic data. I converted it to &lt;a href=&#34;https://github.com/mbostock/topojson/wiki&#34;&gt;&lt;em&gt;TopoJSON&lt;/em&gt;&lt;/a&gt; using &lt;a href=&#34;http://geojson.io/&#34;&gt;&lt;em&gt;geojson.io&lt;/em&gt;&lt;/a&gt; (it&amp;rsquo;s actually a great online map data editor), mainly for smaller file size and faster rendering (but it requires additional &lt;em&gt;topojson.js&lt;/em&gt; and GeoJSON is more widely supported).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S.&lt;/em&gt; This project also help me pick up some geographic knowledge, e.g., the different map &lt;a href=&#34;http://techslides.com/demos/d3/d3-continents-projections.html&#34;&gt;projections&lt;/a&gt; (and &lt;em&gt;Mercator&lt;/em&gt; is the one I use).&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Colors &amp;amp; JSColor&lt;/h3&gt;

&lt;p&gt;I give each province a &amp;ldquo;checked&amp;rdquo; attribute that filling the path with default color when off and filling with the color I choose when on. &lt;a href=&#34;http://jscolor.com/&#34;&gt;&lt;em&gt;JSColor&lt;/em&gt;&lt;/a&gt; is so handy as a color picker. After all, each color can be represented as a string like &lt;em&gt;&amp;rdquo;#fff&amp;rdquo;&lt;/em&gt; or &lt;em&gt;&amp;rdquo;#D2E4B4&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Images &amp;amp; SaveSvgAsPng&lt;/h3&gt;

&lt;p&gt;It took me few days to figure out how to save the rendered svg (that&amp;rsquo;s what D3.js draws for geo-paths) to image, which is important for a closure since I don&amp;rsquo;t want to &lt;em&gt;screenshot my work&lt;/em&gt;. Mike also wrote a post about &lt;a href=&#34;http://bl.ocks.org/biovisualize/8187844&#34;&gt;direct conversion on Chrome&lt;/a&gt; but I found &lt;a href=&#34;https://github.com/exupero/saveSvgAsPng&#34;&gt;saveSvgAsPng&lt;/a&gt; more easy to use (and at least supports Safari as well). There&amp;rsquo;s a &lt;a href=&#34;http://spin.atomicobject.com/2014/01/21/convert-svg-to-png/&#34;&gt;blog post&lt;/a&gt; explains how it works (the key is to convert it to a data URL and go get it).&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;More About Maps&lt;/h2&gt;

&lt;p&gt;D3.js is good at illustrating many kinds of data and statistics, but it&amp;rsquo;s not designed for maps. Frankly speaking, what it does is just visualizing the a bunch of shapes (and treat them as paths), which is a simple form of the &lt;a href=&#34;http://en.wikipedia.org/wiki/Vector_map&#34;&gt;&lt;em&gt;vector map&lt;/em&gt;&lt;/a&gt;. But that&amp;rsquo;s not the map you used to see.&lt;/p&gt;

&lt;p&gt;Actually, &lt;a href=&#34;http://en.wikipedia.org/wiki/Tiled_web_map&#34;&gt;&lt;em&gt;tiled map&lt;/em&gt;&lt;/a&gt; is the most popular way to display and navigate maps so far. To be more specific, it is the &lt;em&gt;raster tiled web map&lt;/em&gt;, which delivers rendered images (usually PNGs) of adjacent tiles from a server to your browser that seamlessly joins them. You might already seen the tiled effect loading a map when the network is slow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Tiled_web_map_Stevage.png/800px-Tiled_web_map_Stevage.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;(Image from Wikipedia)&lt;/p&gt;

&lt;p&gt;Another emerging method for dilivering styled web maps is &lt;a href=&#34;http://en.wikipedia.org/wiki/Vector_tiles&#34;&gt;&lt;em&gt;vector tiles&lt;/em&gt;&lt;/a&gt; (a.k.a. vectiles), which is more of a hybrid of vector map and tiled map. It reduces data transfer greatly by making the client do the rastering.&lt;/p&gt;

&lt;p&gt;During these days&amp;rsquo; study of web maps, I&amp;rsquo;d like to view it as two major components: the data/service and the client. As a case of the vector map, the &lt;em&gt;footprint map&lt;/em&gt; uses TopoJSON as data (local service) and D3.js as client. For tiled map, &lt;em&gt;Google Maps&lt;/em&gt; has provided both data/service and client (API). Buth there are other players in the game, and I will introduce them shortly.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Misc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mapshaper.org/&#34;&gt;mapshaper&lt;/a&gt;: &lt;em&gt;line simplification&lt;/em&gt; tool of vector map for smaller file size and easier zooming, see this &lt;a href=&#34;http://bost.ocks.org/mike/simplify/&#34;&gt;article&lt;/a&gt; for explanation;&lt;/li&gt;
&lt;li&gt;For other kinds of web maps, read the &lt;a href=&#34;http://en.wikipedia.org/wiki/Web_mapping&#34;&gt;&lt;em&gt;wiki page&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;From &lt;a href=&#34;http://www.naturalearthdata.com/&#34;&gt;&lt;em&gt;Natural Earth&lt;/em&gt;&lt;/a&gt; you can acquire &amp;ldquo;free vector and raster map data at 1:10m, 1:50m, and 1:110m scales
&amp;ldquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;OpenStreetMap - The Data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.openstreetmap.org&#34;&gt;&lt;em&gt;OpenStreetMap (OSM)&lt;/em&gt;&lt;/a&gt; might be the strongest competitor of Google Maps. The main difference is that the map data is collected by the people on the ground, like a Wikipedia of map, which means you can &amp;ldquo;take back control of your map&amp;rdquo;. That&amp;rsquo;s why it&amp;rsquo;s &amp;ldquo;rich and detailed&amp;rdquo;, and always up-to-date (the &lt;a href=&#34;http://planet.openstreetmap.org/&#34;&gt;whole data&lt;/a&gt; updates every week for, and it&amp;rsquo;s now over 40GB of it).
If you are still not convinced by those pros, &lt;a href=&#34;http://switch2osm.org/&#34;&gt;&lt;em&gt;Switch2OSM&lt;/em&gt;&lt;/a&gt; will explain to you &amp;ldquo;from first principles to technical how-tos&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;But how those tiled web maps work? First let&amp;rsquo;s see those conventions they follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tiles are 256x256 PNG images;&lt;/li&gt;
&lt;li&gt;The outer most zoom level 0 convers the entire world under &lt;em&gt;Mercator&lt;/em&gt; projection;&lt;/li&gt;
&lt;li&gt;A single tile is replaced by 4 tiles when zooming in;&lt;/li&gt;
&lt;li&gt;The Z-X-Y scheme is used for accessing tiles through REST API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To give an example, here&amp;rsquo;s the &lt;em&gt;first&lt;/em&gt; tile of OSM - &lt;code&gt;http://tile.osm.org/0/0/0.png&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../playground/osm-tiles.html&#34; target=&#34;_blank&#34;&gt;
&lt;img src=&#34;../../img/posts/000.png&#34;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool, it&amp;rsquo;s the whole world (well, actually not all of it as the latitude is limited to around 85 degrees). I have made a simple map client using the OSM data in the &lt;em&gt;Playground&lt;/em&gt; (click the image also directs you there). This toy provides blunt interactions for navigating to any place you want theoritically, up to the max-allowed zoom level (don&amp;rsquo;t try keeping zoom in, as I have not tested the max yet and it will crash :P).&lt;/p&gt;

&lt;p&gt;But if you want to build real apps upon it, keep in mind that the data and the service (or server) is not the same in this case, since OSM focus on letting people contribute the data and sharing them (that&amp;rsquo;s already great enough for a non-profit group, see the &lt;a href=&#34;http://wiki.openstreetmap.org/wiki/Tile_usage_policy&#34;&gt;&lt;em&gt;usage policy&lt;/em&gt;&lt;/a&gt; for more details).&lt;/p&gt;

&lt;p&gt;Luckily, we don&amp;rsquo;t have to worry about serving the data since there are other groups just do it, some are combined with the client. So, next!&lt;/p&gt;

&lt;p&gt;Waiting for part II :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>